1 longest word

/*find lengtheist word in line
*/

import java.util.*;
class lengtheiststr
{ 
  public static void main(String[] args)
  { Scanner input=new Scanner(System.in);
    int max,i,index,temp;
    System.out.print("enter line of text to find it\'s lentheist word : ");
    String inpstr=input.nextLine();
    String[] splitstr=inpstr.split(" ");
    max=splitstr[0].length();
    index=0;
    for(i=0;i<splitstr.length;i++)
    { temp=splitstr[i].length();
     if(temp>max)
       { max=temp;
         index=i;
       }
    }
    
    System.out.println("the maximum length word in the given line is [ "+splitstr[index]+" ]\n its index is "+(index+1));
 }
}
/*SAMPLE I/O:
aswin@aswin-HP-Pavilion-Laptop-15-cs2xxx:~/Desktop/java/programs/1c$ javac lentheiststr.java 
aswin@aswin-HP-Pavilion-Laptop-15-cs2xxx:~/Desktop/java/programs/1c$ java lentheiststr
enter line of text to find it's lentheist word : helping others is art in this rotating earth
the maximum length word in the given line is [ rotating ]
 its index is 7

*/



2  palindrome


import java.util.*;
class palindrome
{ public static void main(String[] args)
  {Scanner input=new Scanner(System.in);
   String inpstr;
   int result;
   System.out.print("enter a word to find wheather it is palindrome or not : ");
   inpstr=input.next();
   result=palindromecheck(inpstr);
   if(result>0)
     System.out.println("given string [ "+inpstr+" ] is palindrome");
   else
     System.out.println("given string [ "+inpstr+" ] is not a palindrome");
   
   
  }
 static int palindromecheck(String inpstr)
  { int i,len;
    len=inpstr.length()-1;
   for(i=0;i<len/2;i++)
    if(inpstr.charAt(i)!=inpstr.charAt(len-i))
      return -1;
     return 1;
  
  }
}

/*
 SAMPLE I/O:
 aswin@aswin-HP-Pavilion-Laptop-15-cs2xxx:~/Desktop/java/programs/1c$ java palindrome
enter a word to find wheather it is palindrome or not : madam
given string [ madam ] is palindrome

*/


3 panagram

import java.util.*;
class panagram
{ public static  void main(String[] args)
  {Scanner input=new Scanner(System.in);
   String inpstr,panagram_str;
   panagram_str="abcdefghijklmnopqrstuvwxyz";
   int result;
   System.out.print("enter a word to find wheather it is palindrome or not : ");
   inpstr=input.next();
   result=panagramcheck(inpstr,panagram_str);
   if(result>0)
     System.out.println("given string [ "+inpstr+" ] is panagram");
   else
     System.out.println("given string [ "+inpstr+" ] is not a papanagram");
   
   
  }
 static  int panagramcheck(String inpstr,String panagram_str)
  { int i,j,len1,len2;
    len1=26;
    len2=inpstr.length();
    if(len2<26)
      return -1;
   for(i=0;i<26;i++)
   {  for(j=0;j<len2;j++)
    {
      if(inpstr.charAt(i)==inpstr.charAt(j))
      break;
      else if(j+1==len2)
       return -1;
   
    }

   }
     return 1;
  
  }
}

/*
 SAMPLE I/O:
aswin@aswin-HP-Pavilion-Laptop-15-cs2xxx:~/Desktop/java/programs/1c$ javac panagram.java 
aswin@aswin-HP-Pavilion-Laptop-15-cs2xxx:~/Desktop/java/programs/1c$ java panagram
enter a word to find wheather it is palindrome or not : qwertyuiopasdfghjklzxcvbnm
given string [ qwertyuiopasdfghjklzxcvbnm ] is panagram

*/
